#!/bin/bash

# Ubuntu On-Demand Backup Script
# CH·ªà CH·∫†Y KHI NG∆Ø·ªúI D√ôNG G·ªåI - KH√îNG T·ª∞ ƒê·ªòNG
# Version: 2.0

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# Functions
print_status() {
    echo -e "${GREEN}‚úì [INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}‚ö† [WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}‚úó [ERROR]${NC} $1"
}

print_header() {
    echo -e "${CYAN}================================================${NC}"
    echo -e "${CYAN}          UBUNTU ON-DEMAND BACKUP${NC}"
    echo -e "${CYAN}        (Ch·ªâ ch·∫°y khi ƒë∆∞·ª£c g·ªçi)${NC}"
    echo -e "${CYAN}================================================${NC}"
}

print_important() {
    echo -e "${BLUE}‚Ñπ [IMPORTANT]${NC} $1"
}

# Configuration
BACKUP_DIR="/backup"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
BACKUP_FILE="$BACKUP_DIR/manual-backup-$TIMESTAMP.tar.gz"
LOG_FILE="$BACKUP_DIR/backup-log-$TIMESTAMP.txt"
INFO_FILE="$BACKUP_DIR/backup-info-$TIMESTAMP.txt"

# Main script starts here
clear
print_header
echo ""

# Nh·∫•n m·∫°nh ƒë√¢y l√† backup th·ªß c√¥ng
print_important "Script n√†y CH·ªà ch·∫°y khi b·∫°n g·ªçi th·ªß c√¥ng"
print_important "KH√îNG c√≥ cron job, KH√îNG c√≥ l·ªãch t·ª± ƒë·ªông"
print_important "Ho√†n to√†n ki·ªÉm so√°t b·ªüi ng∆∞·ªùi d√πng"
echo ""

# Ki·ªÉm tra quy·ªÅn - Cho ph√©p ch·∫°y v·ªõi root
if [[ $EUID -eq 0 ]]; then
   print_status "ƒêang ch·∫°y v·ªõi quy·ªÅn root - OK"
   SUDO_PREFIX=""
else
   print_status "ƒêang ch·∫°y v·ªõi user th∆∞·ªùng - S·∫Ω s·ª≠ d·ª•ng sudo khi c·∫ßn"
   SUDO_PREFIX="sudo"
fi

# Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng
print_status "Th√¥ng tin backup session:"
echo "  üìÖ Th·ªùi gian: $(date '+%Y-%m-%d %H:%M:%S')"
echo "  üë§ Ng∆∞·ªùi th·ª±c hi·ªán: $(whoami)"
echo "  üñ•Ô∏è  Hostname: $(hostname)"
echo "  üêß OS: $(lsb_release -d | cut -f2 2>/dev/null || echo 'Ubuntu')"
echo ""

# X√°c nh·∫≠n QUAN TR·ªåNG t·ª´ ng∆∞·ªùi d√πng
print_warning "QUAN TR·ªåNG: B·∫°n ƒëang chu·∫©n b·ªã backup to√†n b·ªô h·ªá th·ªëng!"
print_warning "Qu√° tr√¨nh n√†y:"
echo "  ‚Ä¢ S·∫Ω m·∫•t 10-60 ph√∫t t√πy v√†o dung l∆∞·ª£ng d·ªØ li·ªáu"
echo "  ‚Ä¢ C·∫ßn √≠t nh·∫•t 5GB dung l∆∞·ª£ng tr·ªëng"
echo "  ‚Ä¢ S·∫Ω backup: /home, /etc, /root, /var/www, /usr/local, /opt, /srv"
echo "  ‚Ä¢ Lo·∫°i tr·ª´: cache, logs, temp files, system directories"
echo ""


# Ki·ªÉm tra dung l∆∞·ª£ng
print_status "Ki·ªÉm tra dung l∆∞·ª£ng ·ªï c·ª©ng..."
AVAILABLE_SPACE=$(df / | awk 'NR==2{printf "%.1f", $4/1024/1024}')
USED_SPACE=$(df / | awk 'NR==2{printf "%.1f", $3/1024/1024}')

echo "  üíæ Dung l∆∞·ª£ng c√≤n l·∫°i: ${AVAILABLE_SPACE}GB"
echo "  üìä Dung l∆∞·ª£ng ƒë√£ s·ª≠ d·ª•ng: ${USED_SPACE}GB"

if (( $(echo "$AVAILABLE_SPACE < 5" | bc -l) )); then
    print_error "Kh√¥ng ƒë·ªß dung l∆∞·ª£ng! C·∫ßn √≠t nh·∫•t 5GB tr·ªëng."
    print_error "Vui l√≤ng d·ªçn d·∫πp ·ªï c·ª©ng tr∆∞·ªõc khi backup."
    exit 1
fi

# T·∫°o th∆∞ m·ª•c backup
print_status "Chu·∫©n b·ªã th∆∞ m·ª•c backup..."
if sudo mkdir -p "$BACKUP_DIR"; then
    sudo chmod 755 "$BACKUP_DIR"
    print_status "Th∆∞ m·ª•c backup: $BACKUP_DIR"
else
    print_error "Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c backup!"
    exit 1
fi

# T·∫°o backup info file
print_status "T·∫°o th√¥ng tin backup..."
cat > "/tmp/backup-info.txt" << EOF
UBUNTU ON-DEMAND BACKUP INFORMATION
===================================
Backup Type: Manual/On-Demand (Kh√¥ng t·ª± ƒë·ªông)
Backup Date: $(date '+%Y-%m-%d %H:%M:%S')
Initiated By: $(whoami)
Hostname: $(hostname)
Ubuntu Version: $(lsb_release -d | cut -f2 2>/dev/null || echo 'Ubuntu')
Kernel: $(uname -r)
IP Address: $(ip route get 1 | awk '{print $7; exit}' 2>/dev/null || echo 'N/A')

BACKUP FILES:
- Main Archive: $BACKUP_FILE
- Log File: $LOG_FILE
- Info File: $INFO_FILE

BACKUP SCOPE:
‚úì /home (User data & configurations)
‚úì /etc (System configurations)
‚úì /root (Root user data)
‚úì /var/www (Web server files)
‚úì /usr/local (Custom installations)
‚úì /opt (Optional software)
‚úì /srv (Service data)

EXCLUDED DIRECTORIES:
‚úó /proc, /sys, /dev (Virtual filesystems)
‚úó /tmp, /var/tmp (Temporary files)
‚úó /var/cache, /var/log (Cache & logs)
‚úó /snap (Snap packages)
‚úó /mnt, /media (Mount points)
‚úó /backup (Avoid recursion)

NOTE: ƒê√¢y l√† backup TH·ª¶ C√îNG, kh√¥ng ph·∫£i backup t·ª± ƒë·ªông.
EOF

sudo mv "/tmp/backup-info.txt" "$INFO_FILE"
sudo chmod 644 "$INFO_FILE"

# B·∫Øt ƒë·∫ßu backup
echo ""
print_header
print_status "üöÄ B·∫ÆT ƒê·∫¶U BACKUP TH·ª¶ C√îNG..."
echo ""
print_status "üìÅ File backup s·∫Ω ƒë∆∞·ª£c l∆∞u: $BACKUP_FILE"
print_status "üìù Log file: $LOG_FILE"
print_status "‚ÑπÔ∏è Info file: $INFO_FILE"
echo ""

print_warning "‚è≥ ƒêANG BACKUP - KH√îNG T·∫ÆT M√ÅY HO·∫∂C NG·∫ÆT K·∫æT N·ªêI!"
print_warning "üîí Qu√° tr√¨nh n√†y ch·∫°y v·ªõi quy·ªÅn sudo ƒë·ªÉ ƒë·ªçc system files"
echo ""

# Backup timer start
START_TIME=$(date +%s)

# Th·ª±c hi·ªán backup
sudo tar -cvpzf "$BACKUP_FILE" \
    --exclude=/proc \
    --exclude=/sys \
    --exclude=/dev \
    --exclude=/run \
    --exclude=/tmp \
    --exclude=/mnt \
    --exclude=/media \
    --exclude=/lost+found \
    --exclude=/var/cache \
    --exclude=/var/tmp \
    --exclude=/var/run \
    --exclude=/var/log \
    --exclude=/snap \
    --exclude=/swapfile \
    --exclude=/backup \
    --one-file-system \
    /home \
    /etc \
    /root \
    /var/www \
    /usr/local \
    /opt \
    /srv \
    2>&1 | tee "$LOG_FILE"

# T√≠nh th·ªùi gian backup
END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))
DURATION_MIN=$((DURATION / 60))
DURATION_SEC=$((DURATION % 60))

# Ki·ªÉm tra k·∫øt qu·∫£
if [ ${PIPESTATUS[0]} -eq 0 ]; then
    BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
    echo ""
    echo -e "${GREEN}================================================${NC}"
    echo -e "${GREEN}           ‚úÖ BACKUP TH√ÄNH C√îNG!${NC}"
    echo -e "${GREEN}================================================${NC}"
    echo ""
    print_status "üìÅ File backup: $BACKUP_FILE"
    print_status "üìè K√≠ch th∆∞·ªõc: $BACKUP_SIZE"
    print_status "‚è±Ô∏è  Th·ªùi gian: ${DURATION_MIN}m ${DURATION_SEC}s"
    print_status "üìù Log file: $LOG_FILE"
    print_status "‚ÑπÔ∏è Info file: $INFO_FILE"
    print_status "‚úÖ Backup th·ªß c√¥ng ho√†n t·∫•t l√∫c: $(date '+%H:%M:%S')"
    
    # T·∫°o restore script
    RESTORE_SCRIPT="$BACKUP_DIR/restore-$(date +%Y%m%d-%H%M%S).sh"
    cat > "$RESTORE_SCRIPT" << 'EOF'
#!/bin/bash
echo "=========================================="
echo "   Ubuntu System Restore Script"
echo "=========================================="
echo "S·ª≠ d·ª•ng: sudo ./restore.sh backup-file.tar.gz"
echo ""

if [ $# -eq 0 ]; then
    echo "‚ùå Vui l√≤ng cung c·∫•p file backup l√†m tham s·ªë"
    echo "V√≠ d·ª•: sudo ./restore.sh manual-backup-20250531-123456.tar.gz"
    exit 1
fi

BACKUP_FILE=$1

if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y file backup: $BACKUP_FILE"
    exit 1
fi

echo "üìÅ S·∫Ω kh√¥i ph·ª•c t·ª´: $BACKUP_FILE"
echo "‚ö†Ô∏è  C·∫¢NH B√ÅO: ƒêi·ªÅu n√†y s·∫Ω GHI ƒê√à l√™n c√°c file hi·ªán c√≥!"
echo "‚ö†Ô∏è  H√£y ƒë·∫£m b·∫£o b·∫°n ƒë√£ backup h·ªá th·ªëng hi·ªán t·∫°i tr∆∞·ªõc khi restore!"
echo ""
echo -n "Nh·∫≠p 'RESTORE' (vi·∫øt hoa) ƒë·ªÉ x√°c nh·∫≠n: "
read confirmation

if [ "$confirmation" = "RESTORE" ]; then
    echo "üöÄ B·∫Øt ƒë·∫ßu kh√¥i ph·ª•c h·ªá th·ªëng..."
    sudo tar -xvpzf "$BACKUP_FILE" -C / --numeric-owner
    echo ""
    echo "‚úÖ Kh√¥i ph·ª•c ho√†n t·∫•t!"
    echo "üîÑ Vui l√≤ng kh·ªüi ƒë·ªông l·∫°i h·ªá th·ªëng: sudo reboot"
else
    echo "‚ùå Kh√¥i ph·ª•c ƒë√£ b·ªã h·ªßy"
fi
EOF

    sudo chmod +x "$RESTORE_SCRIPT"
    print_status "üîß Script kh√¥i ph·ª•c: $RESTORE_SCRIPT"
    
    # Summary
    echo ""
    print_header
    print_important "üìã T√ìM T·∫ÆT BACKUP SESSION:"
    echo "  ‚Ä¢ Backup th·ªß c√¥ng th·ª±c hi·ªán th√†nh c√¥ng"
    echo "  ‚Ä¢ K√≠ch th∆∞·ªõc: $BACKUP_SIZE"  
    echo "  ‚Ä¢ Th·ªùi gian: ${DURATION_MIN}m ${DURATION_SEC}s"
    echo "  ‚Ä¢ Files ƒë∆∞·ª£c t·∫°o: 4 files (backup + log + info + restore script)"
    echo ""
    print_status "üéâ BACKUP HO√ÄN T·∫§T! Script s·∫Ω tho√°t ngay."
    
else
    echo ""
    echo -e "${RED}================================================${NC}"
    echo -e "${RED}            ‚ùå BACKUP TH·∫§T B·∫†I!${NC}"
    echo -e "${RED}================================================${NC}"
    print_error "C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh backup."
    print_error "Ki·ªÉm tra file log ƒë·ªÉ bi·∫øt chi ti·∫øt: $LOG_FILE"
    exit 1
fi

echo ""
print_status "Script backup on-demand k·∫øt th√∫c. T·∫°m bi·ªát!"
